function [msg_even, msg_odd] = ADSB_encodeCPR(lat, lon, alt_ft)
    % Constants
    NZ = 15;

    % Encode altitude
    N = floor((alt_ft + 1000) / 100);
    alt_enc = bitor(N, 2^7);  % Set Q-bit to 1

    % CPR encoding
    lat_even = mod(floor(lat * 2^17 / 360 + 0.5), 2^17);
    lon_even = mod(floor(lon * 2^17 / 360 + 0.5), 2^17);
    
    lat_odd = mod(floor(lat * 2^17 / 360 - floor(lat / 6) + 0.5), 2^17);
    lon_odd = mod(floor(lon * 2^17 / 360 - floor(lon / 6) + 0.5), 2^17);

    % Compose messages
    tc = 11;  % Type code for airborne position
    msg_even = composeMessage(tc, alt_enc, 0, lat_even, lon_even);
    msg_odd = composeMessage(tc, alt_enc, 1, lat_odd, lon_odd);
end

function msg = composeMessage(TC, ALT, F, LAT_CPR, LON_CPR)
    % Compose ADS-B message part (56 bits)
    msg = uint64(0);
    
    % Type Code (5 bits)
    msg = bitor(msg, bitshift(uint64(TC), 51));
    
    % Altitude (12 bits)
    msg = bitor(msg, bitshift(uint64(ALT), 39));
    
    % F bit
    msg = bitor(msg, bitshift(uint64(F), 38));
    
    % LAT_CPR (17 bits)
    msg = bitor(msg, bitshift(uint64(LAT_CPR), 21));
    
    % LON_CPR (17 bits)
    msg = bitor(msg, uint64(LON_CPR));
    
    % Convert to hex string
    msg = sprintf('%014X', msg);
end
